version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key}
      DEBUG: ${DEBUG:-1}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      TIME_ZONE: ${TIME_ZONE:-UTC}
      PAGE_SIZE: ${PAGE_SIZE:-20}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-1}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
      WEBHOOK_URL: ${WEBHOOK_URL:-}
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE: http://backend:8000/api
    depends_on:
      - backend
    ports:
      - "3000:3000"

  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A ai_aggregator worker --loglevel=INFO
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key}
      DEBUG: ${DEBUG:-1}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      TIME_ZONE: ${TIME_ZONE:-UTC}
      PAGE_SIZE: ${PAGE_SIZE:-20}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-1}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
      WEBHOOK_URL: ${WEBHOOK_URL:-}
      TG_API_ID: ${TG_API_ID:-}
      TG_API_HASH: ${TG_API_HASH:-}
      TG_STRING_SESSION: ${TG_STRING_SESSION:-}
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis

  beat:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A ai_aggregator beat --loglevel=INFO
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key}
      DEBUG: ${DEBUG:-1}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      TIME_ZONE: ${TIME_ZONE:-UTC}
      PAGE_SIZE: ${PAGE_SIZE:-20}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-1}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
      WEBHOOK_URL: ${WEBHOOK_URL:-}
      TG_API_ID: ${TG_API_ID:-}
      TG_API_HASH: ${TG_API_HASH:-}
      TG_STRING_SESSION: ${TG_STRING_SESSION:-}
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis

volumes:
  pgdata:


