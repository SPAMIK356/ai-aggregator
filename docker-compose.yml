version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--appendfsync", "everysec",
      "--save", "60", "100",
      "--loglevel", "warning",
      "--tcp-keepalive", "60",
      "--timeout", "0",
      "--stop-writes-on-bgsave-error", "no"
    ]
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      REWRITER_ENABLED: ${REWRITER_ENABLED:-1}
      TG_API_ID: ${TG_API_ID:-}
      TG_API_HASH: ${TG_API_HASH:-}
      TG_STRING_SESSION: ${TG_STRING_SESSION:-}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key}
      DEBUG: ${DEBUG:-1}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      TIME_ZONE: ${TIME_ZONE:-UTC}
      PAGE_SIZE: ${PAGE_SIZE:-20}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-1}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
      WEBHOOK_URL: ${WEBHOOK_URL:-}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-}
      TELEGRAM_CHANNEL: ${TELEGRAM_CHANNEL:-}

      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    environment:
      NEXT_PUBLIC_API_BASE: http://backend:8000/api
      COINGECKO_PRO_API_KEY: ${COINGECKO_PRO_API_KEY:-}
    depends_on:
      - backend
    ports:
      - "3000:3000"
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A ai_aggregator worker --loglevel=INFO --without-gossip --without-mingle
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key}
      DEBUG: ${DEBUG:-1}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      TIME_ZONE: ${TIME_ZONE:-UTC}
      PAGE_SIZE: ${PAGE_SIZE:-20}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-1}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
      CELERY_BROKER_POOL_LIMIT: ${CELERY_BROKER_POOL_LIMIT:-5}
      CELERY_BROKER_HEARTBEAT: ${CELERY_BROKER_HEARTBEAT:-10}
      CELERY_VISIBILITY_TIMEOUT: ${CELERY_VISIBILITY_TIMEOUT:-3600}
      CELERY_SOCKET_CONNECT_TIMEOUT: ${CELERY_SOCKET_CONNECT_TIMEOUT:-5}
      CELERY_SOCKET_TIMEOUT: ${CELERY_SOCKET_TIMEOUT:-60}
      CELERY_HEALTH_CHECK_INTERVAL: ${CELERY_HEALTH_CHECK_INTERVAL:-15}
      WEBHOOK_URL: ${WEBHOOK_URL:-}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-}
      TELEGRAM_CHANNEL: ${TELEGRAM_CHANNEL:-}
      REWRITER_ENABLED: ${REWRITER_ENABLED:-1}

      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      TG_API_ID: ${TG_API_ID:-}
      TG_API_HASH: ${TG_API_HASH:-}
      TG_STRING_SESSION: ${TG_STRING_SESSION:-}
    volumes:
      - ./backend:/app
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped

  beat:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: celery -A ai_aggregator beat --loglevel=INFO
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-dev-secret-key}
      DEBUG: ${DEBUG:-1}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      POSTGRES_DB: ${POSTGRES_DB:-ai_aggregator}
      POSTGRES_USER: ${POSTGRES_USER:-ai_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ai_password}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      TIME_ZONE: ${TIME_ZONE:-UTC}
      PAGE_SIZE: ${PAGE_SIZE:-20}
      CORS_ALLOW_ALL_ORIGINS: ${CORS_ALLOW_ALL_ORIGINS:-1}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/1}
      CELERY_BROKER_POOL_LIMIT: ${CELERY_BROKER_POOL_LIMIT:-5}
      CELERY_BROKER_HEARTBEAT: ${CELERY_BROKER_HEARTBEAT:-10}
      CELERY_VISIBILITY_TIMEOUT: ${CELERY_VISIBILITY_TIMEOUT:-3600}
      CELERY_SOCKET_CONNECT_TIMEOUT: ${CELERY_SOCKET_CONNECT_TIMEOUT:-5}
      CELERY_SOCKET_TIMEOUT: ${CELERY_SOCKET_TIMEOUT:-60}
      CELERY_HEALTH_CHECK_INTERVAL: ${CELERY_HEALTH_CHECK_INTERVAL:-15}
      WEBHOOK_URL: ${WEBHOOK_URL:-}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-}
      TELEGRAM_CHANNEL: ${TELEGRAM_CHANNEL:-}
      REWRITER_ENABLED: ${REWRITER_ENABLED:-1}

      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      TG_API_ID: ${TG_API_ID:-}
      TG_API_HASH: ${TG_API_HASH:-}
      TG_STRING_SESSION: ${TG_STRING_SESSION:-}
    volumes:
      - ./backend:/app
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:


